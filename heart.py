# -*- coding: utf-8 -*-
"""heart.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x3NwvStE7TUJWbccNJcPwdDIr69g50Sb
"""


import streamlit as st
import pandas as pd
import numpy as np
import keras
from keras.layers import Dense, Activation
from keras.models import Sequential
from keras.utils import to_categorical
from sklearn.linear_model import LogisticRegression
from keras.utils import np_utils
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import KFold
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn.pipeline import Pipeline
from sklearn import datasets
from sklearn import linear_model
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')

st.title('Coronary Heart Disease Predictor')
st.subheader('A machine learning tool based on the *Framingham Heart Disease study*')
st.write('Fill out details')
url = 'https://raw.githubusercontent.com/AnirudhVm/DL-Project_Coronary-Heart-Disease-Predictor/main/data/dataset.csv'
df = pd.read_csv(url, error_bad_lines=False)
#df=pd.read_csv("https://raw.githubusercontent.com/AnirudhVm/DL-Project_Coronary-Heart-Disease-Predictor/main/data/dataset.csv")

#df

#print(df)
print(df.shape)

df.info()

avg_cigs=df["cigsPerDay"].astype("float").mean(axis=0) 
df["cigsPerDay"].replace(np.nan, avg_cigs, inplace=True)



avg_chol=df["totChol"].astype("float").mean(axis=0) 
df["totChol"].replace(np.nan, avg_chol, inplace=True)

avg_bmi=df["BMI"].astype("float").mean(axis=0) 
df["BMI"].replace(np.nan, avg_bmi, inplace=True)

avg_hr=df["heartRate"].astype("float").mean(axis=0) 
df["heartRate"].replace(np.nan, avg_hr, inplace=True)

avg_glu=df["glucose"].astype("float").mean(axis=0) 
df["glucose"].replace(np.nan, avg_glu, inplace=True)

df.info()

mode_bpmed=df["BPMeds"].astype("float").mode() 
df["BPMeds"].replace(np.nan, mode_bpmed[0], inplace=True)

df.info()
X=df.drop("CHD",axis=1)
y=df["CHD"]



lr = LogisticRegression()
lr.fit(X, y)

test=[]
test=pd.DataFrame()



gen = st.selectbox(
    'Gender',
    ['Male','Female'])
age=st.slider('Age', min_value=0, max_value=100,key=2)

smoke = st.selectbox(
    'Smoking Status',
    ['Smoker','Non Smoker'])
cigpday=st.slider('Cigs per Day', min_value=0, max_value=100,key=3)
bpmed = st.selectbox(
    'Do you take Blood Pressure Medications?',
    ['Yes','No'])
stroke = st.selectbox(
    'History of having a stroke?',
    ['Yes','No'])
hyp = st.selectbox(
    'History of having a hypertension?',
    ['Yes','No'])
diab = st.selectbox(
    'Are you diabetic?',
    ['Yes','No'])
totchol=st.slider('Total Cholestrol', min_value=100, max_value=700,key=4)
sysbp=st.slider('Systolic Blood Pressure', min_value=50, max_value=400,key=5)
dbp=st.slider('Diastolic Blood Pressure', min_value=0, max_value=200,key=6)
bmi=st.slider('BMI', min_value=15, max_value=40,key=7)
hr=st.slider('Resting Heartrate', min_value=20, max_value=150,key=8)
glu=st.slider('Glucose', min_value=20, max_value=500,key=8)
#"""LR"""
if gen=='Male':
    gen_ID=1
else:
    gen_ID=0
    
if smoke=='Smoker':
    smoke_ID=1
else:
    smoke_ID=0
    
if bpmed=='Yes':
    bpmed_ID=1
else:
    bpmed_ID=0 
    
if stroke=='Yes':
    str_ID=1
else:
    str_ID=0 
    
if hyp=='Yes':
    hyp_ID=1
else:
    hyp_ID=0   
if diab=='Yes':
    db_ID=1
else:
    db_ID=0    

test= [gen_ID,age,smoke_ID,cigpday,bpmed_ID,str_ID,hyp_ID,db_ID,
       totchol,sysbp,dbp,bmi,hr,glu]
test=pd.DataFrame(test)

test=test.transpose()

if st.button('Predict'):
    y_pred = lr.predict(test)
    if y_pred==1:
        st.write('You are likely to get CHD')
    else:
       st.write('You are safe')
